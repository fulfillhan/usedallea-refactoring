<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.application.usedallea.product.domain.repository.ProductRepository">
    <insert id="save" parameterType="Product" useGeneratedKeys="true" keyProperty="productId">
        INSERT INTO PRODUCT(
            SELLER_ID,
            IMG_ID,
            TITLE,
            CATEGORY,
            QUALITY_CONDITION,
            PRICE,
            DESCRIPTION,
            STATUS,
            READ_COUNT
        )
        VALUES(
            #{sellerId},
            #{imgId},
            #{title},
            #{category},
            #{qualityCondition},
            #{price},
            #{description},
            #{status},
            #{readCount}
        )
    </insert>

    <select id="findProductById" parameterType="long" resultType="Product">
        SELECT
            PRODUCT_ID,
            SELLER_ID,
            IMG_ID,
            TITLE,
            PRICE,
            DESCRIPTION,
            QUALITY_CONDITION,
            CATEGORY,
            STATUS,
            READ_COUNT,
            VALIDATED_YN,
            CREATED_AT
        FROM
            PRODUCT
        WHERE
            PRODUCT_ID = #{productId}
    </select>

    <select id="findTotalProductsCount" parameterType="hashmap" resultType="int">
        SELECT
            COUNT(*)
        FROM
            PRODUCT
        <where>
            <if test="searchWord != ''">
                CATEGORY LIKE CONCAT('%', #{searchWord}, '%') OR
                TITLE LIKE CONCAT('%', #{searchWord}, '%') OR
                DESCRIPTION LIKE CONCAT('%', #{searchWord}, '%')
                AND VALIDATED_YN = 'y'
            </if>
            <if test="searchWord == ''">
                VALIDATED_YN = 'y'
            </if>
        </where>
    </select>

    <update id="updateReadCount" parameterType="Product">
        UPDATE
            PRODUCT
        SET
            READ_COUNT = #{readCount}
        WHERE
            PRODUCT_ID = #{productId}
    </update>

    <select id="findTotalProductCountBySeller" parameterType="hashMap" resultType="int">
        <choose>
            <when test="searchWord == ''">
                SELECT
                    COUNT(*)
                FROM
                    PRODUCT
                WHERE
                SELLER_ID = #{sellerId}
                AND VALIDATED_YN = 'y'
            </when>
            <otherwise>
                SELECT
                    COUNT(*)
                FROM
                    PRODUCT
                WHERE
                    SELLER_ID = #{sellerId}
                AND VALIDATED_YN = 'y'
                AND(
                    CATEGORY LIKE CONCAT('%', #{searchWord}, '%') OR
                    TITLE LIKE CONCAT('%', #{searchWord}, '%') OR
                    DESCRIPTION LIKE CONCAT('%', #{searchWord}, '%')
                )
            </otherwise>
        </choose>
    </select>

    <select id="findProductsList" parameterType="hashMap" resultType="Product">
        <choose>
            <when test="searchWord == ''">
             SELECT
                PRODUCT_ID,
                SELLER_ID,
                IMG_ID,
                TITLE,
                PRICE,
                DESCRIPTION,
                QUALITY_CONDITION,
                CATEGORY,
                STATUS,
                READ_COUNT,
                VALIDATED_YN,
                CREATED_AT,
                UPDATED_AT
             FROM
                PRODUCT
             WHERE
                VALIDATED_YN = 'y'
             ORDER BY
                 CREATED_AT DESC
             LIMIT
                #{startProductIdx},#{onePageProductCnt}
            </when>
            <otherwise>
             SELECT
                PRODUCT_ID,
                SELLER_ID,
                IMG_ID,
                TITLE,
                PRICE,
                DESCRIPTION,
                QUALITY_CONDITION,
                CATEGORY,
                STATUS,
                READ_COUNT,
                VALIDATED_YN,
                CREATED_AT,
                UPDATED_AT
             FROM
                 PRODUCT
             <where>
                <if test="searchWord != ''">
                    CATEGORY LIKE CONCAT('%', #{searchWord}, '%') OR
                    TITLE LIKE CONCAT('%', #{searchWord}, '%') OR
                    DESCRIPTION LIKE CONCAT('%', #{searchWord}, '%')
                    AND VALIDATED_YN = 'y'
                </if>
                 AND VALIDATED_YN = 'y'
             </where>
                 ORDER BY
                    CREATED_AT DESC
                 LIMIT
                 #{startProductIdx}, #{onePageProductCnt}
             </otherwise>
        </choose>
    </select>
    
    <select id="findSellerProductsList" parameterType="hashMap" resultType="Product">
        <choose>
            <when test="searchWord == ''">
                SELECT
                    PRODUCT_ID,
                    SELLER_ID,
                    PRICE,
                    UPDATED_AT,
                    READ_COUNT,
                    STATUS,
                    TITLE,
                    IMG_ID
                FROM
                    PRODUCT
                WHERE
                    SELLER_ID = #{sellerId}
                AND  VALIDATED_YN = 'y'
                ORDER BY
                    CREATED_AT DESC
                LIMIT
                    #{startProductIdx}, #{onePageProductCnt}
            </when>
            <otherwise>
                SELECT
                    PRODUCT_ID,
                    SELLER_ID,
                    PRICE,
                    UPDATED_AT,
                    READ_COUNT,
                    STATUS,
                    TITLE,
                    IMG_ID
                FROM
                    PRODUCT
                <where>
                    SELLER_ID = #{sellerId}
                    AND VALIDATED_YN = 'y'
                    AND (
                    CATEGORY LIKE CONCAT('%', #{searchWord}, '%') OR
                    TITLE LIKE CONCAT('%', #{searchWord}, '%') OR
                    DESCRIPTION LIKE CONCAT('%', #{searchWord}, '%')
                    )
                </where>
                ORDER BY
                    CREATED_AT DESC
                LIMIT
                    #{startProductIdx}, #{onePageProductCnt}
            </otherwise>
        </choose>
    </select>

</mapper>